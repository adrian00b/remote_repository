git init - stworzenie repozytorium

git status - aktualny status repozytorium

git add - dodanie pliku do przechowalni : 
	git add . - dodanie wszystkich plikow
	git add nazwapliku - dodanie konkretnego pliku 
	
git commit - zapisanie zmian w repozytorium  :
	git commit -m "Komentarz:  - zapisanie zmian w repozytorium wraz z komentarzem 
	
git clean - sluzy do usuniecia plikow ktore nigdy nie zostaly dodane do repozozytorium (niesledzone pliki i katalogi), 
	UWAGA! zmiany nie da sie odwrocic
	git clean -n   - zwraca liste plikow ktore moga zostac usuniete
	git clean -nd  - tutaj pokaze sie kompletna lista - wraz z katalogami 
	git clean -idf - (i) interaktywnie, (d) katalogi, jezeli chcemy usunac tylko wybrane
	
git reset - usuniecie z przechowywalni (cofniecie plikow ze stage), odwrotnosc polecenia git add   
	 
git checkout - usuniecie zmian z plikow bedacych w przechowali

git rm nazwapliku - usuniecie pliku z repozytorium (i katalogu roboczego rowniez),
 roznica miedzy git rm a git clean polega na tym ze uzywajac git rm zmiany da sie odwrocic!! odwrocic checkoutem
 
git log - pokazuje historie zmian wraz z logami, aby wyjsc z historii zmian klawisz Q
	git log --oneline - pokazuje historie zmian w skroconej formie zapisu 
	
git checkout 'log' - przywraca stan z wybranego commita, jednakze otwiera to w stanie 'HEAD detached', czyli mozna dowolnie
	wprowadzac zmiany w plikach bez zapisywania tego gdziekolwiek - pozniej mozemy zapisac zmiany w osobnym branchu:
	
	git checkout 'log' 'file' - przywraca stan wybranego pliku 'file' z danego commita
	git checkout -b - zapisanie w nowym branchu
	git checkout master - powrot do glownego brancha (najabrdziej aktualnej wersji spred git checkout 'log')
	
git revert - odwrocenie zmian z wybranego commitu i zapisanie ich jako nowy commit, NIE USUWA HISTORII!!
	

	
	
